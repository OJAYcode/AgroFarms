@model Farms.Models.ViewModels.ProductListViewModel
@{
    ViewData["Title"] = "Products";
}

<div class="row mb-4">
    <div class="col-md-8">
        <h1><i class="fas fa-store me-2"></i>Fresh Products</h1>
        <p class="text-muted">Discover quality agricultural products from local farmers</p>
    </div>
    <div class="col-md-4">
        <form asp-action="Products" method="get" class="d-flex">
            <input type="text" name="search" class="form-control me-2" placeholder="Search products..." value="@ViewBag.SearchTerm">
            <button type="submit" class="btn btn-outline-primary">
                <i class="fas fa-search"></i>
            </button>
        </form>
    </div>
</div>

<!-- Filters -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <form asp-action="Products" method="get" id="filterForm">
                    <input type="hidden" name="search" value="@ViewBag.SearchTerm">
                    <div class="row">
                        <div class="col-md-3">
                            <label class="form-label">Category</label>                            <select name="category" class="form-select" onchange="submitFilter()">
                                <option value="">All Categories</option>
                                <option value="Vegetables" selected="@(ViewBag.SelectedCategory == "Vegetables")">Vegetables</option>
                                <option value="Fruits" selected="@(ViewBag.SelectedCategory == "Fruits")">Fruits</option>
                                <option value="Grains" selected="@(ViewBag.SelectedCategory == "Grains")">Grains</option>
                                <option value="Herbs" selected="@(ViewBag.SelectedCategory == "Herbs")">Herbs</option>
                                <option value="Dairy" selected="@(ViewBag.SelectedCategory == "Dairy")">Dairy</option>
                                <option value="Meat" selected="@(ViewBag.SelectedCategory == "Meat")">Meat</option>
                                <option value="Other" selected="@(ViewBag.SelectedCategory == "Other")">Other</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Price Range</label>                            <select name="priceRange" class="form-select" onchange="submitFilter()">
                                <option value="">Any Price</option>
                                <option value="0-10" selected="@(ViewBag.PriceRange == "0-10")">$0 - $10</option>
                                <option value="10-25" selected="@(ViewBag.PriceRange == "10-25")">$10 - $25</option>
                                <option value="25-50" selected="@(ViewBag.PriceRange == "25-50")">$25 - $50</option>
                                <option value="50+" selected="@(ViewBag.PriceRange == "50+")">$50+</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Sort By</label>                            <select name="sortBy" class="form-select" onchange="submitFilter()">
                                <option value="name" selected="@(ViewBag.SortBy == "name")">Name</option>
                                <option value="price_asc" selected="@(ViewBag.SortBy == "price_asc")">Price: Low to High</option>
                                <option value="price_desc" selected="@(ViewBag.SortBy == "price_desc")">Price: High to Low</option>
                                <option value="newest" selected="@(ViewBag.SortBy == "newest")">Newest First</option>
                            </select>
                        </div>
                        <div class="col-md-3 d-flex align-items-end">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="organicOnly" value="true" @(ViewBag.OrganicOnly == true ? "checked" : "") onchange="submitFilter()">
                                <label class="form-check-label">
                                    Organic Only
                                </label>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@if (Model?.Products != null && Model.Products.Any())
{
    <div class="row">
        @foreach (var product in Model.Products)
        {
            <div class="col-md-6 col-lg-4 col-xl-3 mb-4">
                <div class="card h-100 product-card">
                    @if (!string.IsNullOrEmpty(product.ImageUrl))
                    {
                        <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: cover;">
                    }
                    else
                    {
                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                            <i class="fas fa-image fa-3x text-muted"></i>
                        </div>
                    }
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text text-muted small flex-grow-1">@product.Description</p>
                        <div class="mb-2">
                            <span class="badge bg-secondary">@product.Category</span>
                            @if (product.IsOrganic)
                            {
                                <span class="badge bg-success">Organic</span>
                            }
                        </div>
                        <div class="mb-2">
                            <h5 class="text-success mb-0">$@product.Price.ToString("F2")</h5>
                            <small class="text-muted">per @product.Unit</small>
                        </div>
                        <div class="mb-3">
                            <small class="text-muted">
                                Stock: <strong>@product.StockQuantity @product.Unit</strong>
                            </small>
                        </div>
                        <div class="mt-auto">
                            <div class="d-flex gap-2">
                                <a asp-action="ProductDetails" asp-route-id="@product.Id" class="btn btn-outline-primary btn-sm flex-grow-1">
                                    <i class="fas fa-eye me-1"></i>View
                                </a>
                                @if (product.StockQuantity > 0)
                                {
                                    <button type="button" class="btn btn-success btn-sm" onclick="addToCart('@product.Id')">
                                        <i class="fas fa-cart-plus"></i>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-secondary btn-sm" disabled>
                                        <i class="fas fa-times"></i>
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-search fa-5x text-muted mb-3"></i>
        <h3>No Products Found</h3>
        <p class="text-muted">Try adjusting your search criteria or filters</p>
        <a asp-action="Products" class="btn btn-primary">
            <i class="fas fa-refresh me-2"></i>Reset Filters
        </a>
    </div>
}

@section Scripts {
    <script>
        function submitFilter() {
            document.getElementById('filterForm').submit();
        }        function addToCart(productId) {
            fetch('@Url.Action("AddToCart", "Buyer")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    ProductId: productId,
                    Quantity: 1
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update cart count in navbar
                    updateCartCount();
                    
                    // Show success message
                    showToast('Product added to cart!', 'success');
                } else {
                    showToast(data.message || 'Error adding to cart', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('Error adding to cart', 'error');
            });
        }

        function updateCartCount() {
            fetch('@Url.Action("GetCartCount", "Buyer")')
                .then(response => response.json())
                .then(data => {
                    const cartBadge = document.querySelector('.cart-count');
                    if (cartBadge) {
                        cartBadge.textContent = data.count;
                        if (data.count > 0) {
                            cartBadge.style.display = 'inline';
                        }
                    }
                });
        }

        function showToast(message, type) {
            // Simple toast notification
            const toast = document.createElement('div');
            toast.className = `alert alert-${type === 'success' ? 'success' : 'danger'} position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 250px;';
            toast.textContent = message;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.remove();
            }, 3000);
        }
    </script>

    <style>
        .product-card {
            transition: transform 0.2s ease-in-out;
        }
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
    </style>
}
